# IAROS Service Deployment Template
# Replace {{SERVICE_NAME}} with actual service name
# Replace {{SERVICE_TIER}} with: gateway, backend, frontend
# Replace {{CPU_LIMIT}} and {{MEMORY_LIMIT}} based on service requirements

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{SERVICE_NAME}}
  namespace: iaros-prod
  labels:
    app: {{SERVICE_NAME}}
    tier: {{SERVICE_TIER}}
    version: "latest"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{SERVICE_NAME}}
  template:
    metadata:
      labels:
        app: {{SERVICE_NAME}}
        tier: {{SERVICE_TIER}}
        version: "latest"
    spec:
      containers:
      - name: {{SERVICE_NAME}}
        image: iaros/{{SERVICE_NAME}}:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: SERVICE_NAME
          value: "{{SERVICE_NAME}}"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: "{{CPU_LIMIT}}"
            memory: "{{MEMORY_LIMIT}}"
          requests:
            cpu: "{{CPU_REQUEST}}"
            memory: "{{MEMORY_REQUEST}}"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      serviceAccountName: iaros-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: {{SERVICE_NAME}}-service
  namespace: iaros-prod
  labels:
    app: {{SERVICE_NAME}}
    tier: {{SERVICE_TIER}}
spec:
  selector:
    app: {{SERVICE_NAME}}
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
# Optional: ServiceMonitor for Prometheus monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{SERVICE_NAME}}-monitor
  namespace: iaros-prod
  labels:
    app: {{SERVICE_NAME}}
    tier: {{SERVICE_TIER}}
spec:
  selector:
    matchLabels:
      app: {{SERVICE_NAME}}
  endpoints:
  - port: http
    path: /metrics
    interval: 30s 
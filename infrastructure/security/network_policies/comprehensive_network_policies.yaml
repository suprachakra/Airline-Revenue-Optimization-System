# IAROS Comprehensive Network Security Policies
# Zero-Trust Network Architecture Implementation
# Version: 1.0

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: iaros-comprehensive-network-policy
  namespace: iaros-prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# API Gateway Network Policy - Entry Point Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-policy
  namespace: iaros-prod
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  - from: []  # Allow external traffic
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8080
  - to: []  # Allow DNS resolution
    ports:
    - protocol: UDP
      port: 53

---
# Backend Services Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-services-policy
  namespace: iaros-prod
spec:
  podSelector:
    matchLabels:
      tier: backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          tier: database
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          tier: cache
    ports:
    - protocol: TCP
      port: 6379
  - to: []  # Allow DNS
    ports:
    - protocol: UDP
      port: 53

---
# Database Network Policy - Strict Access Control
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: database-policy
  namespace: iaros-prod
spec:
  podSelector:
    matchLabels:
      tier: database
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 5432
  - from:
    - podSelector:
        matchLabels:
          app: backup-service
    ports:
    - protocol: TCP
      port: 5432
  egress:
  - to:
    - podSelector:
        matchLabels:
          tier: database
    ports:
    - protocol: TCP
      port: 5432  # Replication traffic
  - to: []  # Allow DNS
    ports:
    - protocol: UDP
      port: 53

---
# Cache/Redis Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cache-policy
  namespace: iaros-prod
spec:
  podSelector:
    matchLabels:
      tier: cache
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          tier: backend
    ports:
    - protocol: TCP
      port: 6379
  - from:
    - podSelector:
        matchLabels:
          app: session-manager
    ports:
    - protocol: TCP
      port: 6381
  egress:
  - to: []  # Allow DNS
    ports:
    - protocol: UDP
      port: 53

---
# Monitoring Services Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-policy
  namespace: iaros-prod
spec:
  podSelector:
    matchLabels:
      tier: monitoring
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9090
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 9090  # Scrape metrics from all services
  - to: []  # Allow DNS and external alerting
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443

---
# Security Services Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: security-services-policy
  namespace: iaros-prod
spec:
  podSelector:
    matchLabels:
      tier: security
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 7000  # Vault API
    - protocol: TCP
      port: 7001  # OAuth server
    - protocol: TCP
      port: 7002  # Certificate manager
  egress:
  - to: []  # Security services need full egress for threat intelligence
    ports:
    - protocol: TCP
      port: 443
    - protocol: UDP
      port: 53

---
# Default Deny All Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: iaros-prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress 
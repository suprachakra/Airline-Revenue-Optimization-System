# API Gateway Configuration - Production Ready
# Version: 3.2
# Last Updated: 2024-01-01

# Environment Configuration
environment: production

# Server Configuration
server:
  port: 8080
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 120s
  tls:
    enabled: true
    cert_file: "/etc/ssl/certs/gateway.crt"
    key_file: "/etc/ssl/private/gateway.key"
    min_version: "1.3"
    cipher_suites:
      - "TLS_AES_256_GCM_SHA384"
      - "TLS_CHACHA20_POLY1305_SHA256"
      - "TLS_AES_128_GCM_SHA256"

# Gateway Configuration
gateway:
  version: "1.0.0"
  name: "IAROS API Gateway"
  description: "Integrated Airline Revenue Optimization System API Gateway"

# Backend Services Configuration
services:
  pricing:
    host: "pricing-service"
    port: 8080
    primary: "http://pricing-service:8080"
    secondary: "http://pricing-service-backup:8080"
  forecasting:
    host: "forecasting-service"
    port: 8080
    primary: "http://forecasting-service:8080"
    secondary: "http://forecasting-service-backup:8080"
  offer:
    host: "offer-service"
    port: 8080
    primary: "http://offer-service:8080"
    secondary: "http://offer-service-backup:8080"
  order:
    host: "order-service"
    port: 8080
    primary: "http://order-service:8080"
    secondary: "http://order-service-backup:8080"
  distribution:
    host: "distribution-service"
    port: 8080
    primary: "http://distribution-service:8080"
    secondary: "http://distribution-service-backup:8080"
  ancillary:
    host: "ancillary-service"
    port: 8080
    primary: "http://ancillary-service:8080"
    secondary: "http://ancillary-service-backup:8080"
  user_management:
    host: "user-service"
    port: 8080
    primary: "http://user-service:8080"
    secondary: "http://user-service-backup:8080"
  network_planning:
    host: "network-service"
    port: 8080
    primary: "http://network-service:8080"
    secondary: "http://network-service-backup:8080"
  procurement:
    host: "procurement-service"
    port: 8080
    primary: "http://procurement-service:8080"
    secondary: "http://procurement-service-backup:8080"
  promotion:
    host: "promotion-service"
    port: 8080
    primary: "http://promotion-service:8080"
    secondary: "http://promotion-service-backup:8080"

# Authentication Configuration
auth:
  jwt_enabled: true
  jwt_key_path: "/etc/jwt"
  jwt_issuer: "iaros-api-gateway"
  jwt_audience: "iaros-services"
  jwt_expiry: "24h"
  api_key_enabled: true
  session_enabled: true
  rbac_config: "rbac.yaml"
  api_key_config: "api_keys.yaml"
  session_config: "sessions.yaml"

# Rate Limiting Configuration
rate_limit:
  global:
    limit: 10000
    window: "1m"
  per_ip:
    limit: 1000
    window: "1m"
  per_user:
    limit: 5000
    window: "1m"
  per_api_key:
    limit: 10000
    window: "1m"
  per_path:
    limit: 2000
    window: "1m"
  per_method:
    limit: 3000
    window: "1m"

# Circuit Breaker Configuration
circuit_breaker:
  default_failure_threshold: 5
  default_success_threshold: 3
  default_timeout: "30s"
  default_max_requests: 100
  services:
    pricing-service:
      failure_threshold: 5
      success_threshold: 3
      timeout: "30s"
      max_requests: 100
    forecasting-service:
      failure_threshold: 3
      success_threshold: 2
      timeout: "60s"
      max_requests: 50
    offer-service:
      failure_threshold: 5
      success_threshold: 3
      timeout: "20s"
      max_requests: 200
    order-service:
      failure_threshold: 3
      success_threshold: 2
      timeout: "30s"
      max_requests: 150
    distribution-service:
      failure_threshold: 4
      success_threshold: 3
      timeout: "25s"
      max_requests: 300
    ancillary-service:
      failure_threshold: 5
      success_threshold: 3
      timeout: "20s"
      max_requests: 250
    user-service:
      failure_threshold: 3
      success_threshold: 2
      timeout: "15s"
      max_requests: 100

# Service Registry Configuration
service_registry:
  health_check_interval: "30s"
  health_check_timeout: "5s"
  cache_expiry: "5m"

# Load Balancer Configuration
load_balancer:
  strategy: "round_robin" # Options: round_robin, weighted, least_connections

# Redis Configuration
redis:
  address: "redis:6379"
  password: ""
  auth_db: 0
  rate_limit_db: 1
  service_db: 2
  cache_db: 3

# Monitoring Configuration
monitoring:
  enabled: true
  metrics_path: "/metrics"
  report_interval: "30s"
  prometheus_addr: "prometheus:9090"
  jaeger_addr: "jaeger:14268"

# CORS Configuration
cors:
  allowed_origins:
    - "https://*.iaros.ai"
    - "https://localhost:3000"
    - "https://localhost:8080"
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "OPTIONS"
    - "PATCH"
  allowed_headers:
    - "Content-Type"
    - "Authorization"
    - "X-API-Key"
    - "X-Request-ID"
    - "X-Forwarded-For"
  max_age: "12h"

# Security Configuration
security:
  enable_security_headers: true
  csp_policy: "default-src 'self'; frame-ancestors 'none'; base-uri 'self'"
  hsts_max_age: 31536000
  custom_headers:
    X-Content-Type-Options: "nosniff"
    X-Frame-Options: "DENY"
    X-XSS-Protection: "1; mode=block"
    Referrer-Policy: "strict-origin-when-cross-origin"
    Permissions-Policy: "geolocation=(), microphone=(), camera=()"

# Logging Configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"

# Cache Configuration
cache:
  enabled: true
  default_ttl: "15m"
  redis_cluster: true
  compression: true
  
# Timeouts Configuration
timeouts:
  request_timeout: "30s"
  service_timeout: "20s"
  health_check_timeout: "5s"
  circuit_breaker_timeout: "30s"

# Request/Response Configuration
request:
  max_body_size: "10MB"
  max_header_size: "1MB"
  read_header_timeout: "10s"

# Feature Flags
features:
  enable_request_logging: true
  enable_response_logging: false
  enable_metrics_collection: true
  enable_distributed_tracing: true
  enable_circuit_breaker: true
  enable_rate_limiting: true
  enable_authentication: true
  enable_authorization: true
  enable_caching: true
  enable_compression: true
  enable_health_checks: true

# Routing Configuration
routing:
  api_version: "v1"
  base_path: "/api"
  timeout_per_route: true
  retry_failed_requests: true
  max_retries: 3
  retry_delay: "100ms"

# SSL/TLS Configuration
ssl:
  protocols:
    - "TLSv1.3"
    - "TLSv1.2"
  prefer_server_ciphers: true
  session_tickets: false
  session_timeout: "300s"

# Performance Configuration
performance:
  max_connections: 10000
  max_connections_per_ip: 100
  keep_alive_timeout: "65s"
  read_buffer_size: "4KB"
  write_buffer_size: "4KB"

# Environment-specific overrides
environments:
  development:
    logging:
      level: "debug"
    security:
      enable_security_headers: false
    features:
      enable_request_logging: true
      enable_response_logging: true
  
  staging:
    rate_limit:
      global:
        limit: 5000
    circuit_breaker:
      default_failure_threshold: 3
  
  production:
    logging:
      level: "warn"
    performance:
      max_connections: 50000
    ssl:
      enforce_https: true
